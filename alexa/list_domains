#! /usr/bin/env bash
# Info: http://data.norge.no/data/registerenheten-i-br%C3%B8nn%C3%B8ysund/enhetsregisteret
# Download: http://s3.amazonaws.com/alexa-static/top-1m.csv.zip
SOURCE_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
cd "$SOURCE_DIR"
source config.sh

command -v 7z >/dev/null 2>&1 || \
    { echo >&2 "[ERROR] This script requires parallel but it's not installed. Aborting.";
      echo >&2 "[ERROR] Please run 'sudo apt install p7zip-full'";
      exit 1; }


YMD="$(date +%F)"

# Timestamping is turned off on the server, so we can't use it for wget
# Download if missing or --update-source

LIST="${YMD}-${DOMAINS}"

wget -N "http://s3.amazonaws.com/alexa-static/top-1m.csv.zip" 2>&1 # | grep "not retrieving" 1>&2
if [ ! -e "$LIST" ] || [ "x$1" = "x--update-list" ]; then
  # We did not find "not retrieving" or we were forced to update the list
  7z x -y top-1m.csv.zip
  cat top-1m.csv | "$MCN_TOOLS/default_extract" > "$SOURCE_DIR/_list.tmp"
  cat top-1m.csv | sed -e 's/\.com\.no/\.no/' -e 's/\.co\.no/\.no/' | "$MCN_TOOLS/default_extract" >> "$SOURCE_DIR/_list.tmp"
  # cat top-1m.csv | sed -e 's/\.[^.]*$/\.no/' | "${MCN_TOOLS}/default_extract" >> ./tmp.list
  mv output/* old/
  cat "$SOURCE_DIR/_list.tmp" old/*.list | sort | uniq > "$SOURCE_DIR/_list2.tmp"
  mv "$SOURCE_DIR/_list2.tmp" "output/$LIST"
  rm -f "$SOURCE_DIR/_list.tmp"
fi
